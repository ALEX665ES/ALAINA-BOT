import future

import asyncio
import os
import time
from urllib.parse import urlparse

import wget
from pyrogram import filters
from pyrogram.types import Message
from youtubesearchpython import SearchVideos
from yt_dlp import YoutubeDL

from VIPMUSIC import app
import asyncio
import os
import time
import wget
from urllib.parse import urlparse
from pyrogram import filters
from pyrogram.types import Message
from youtubesearchpython import SearchVideos
from yt_dlp import YoutubeDL
from VIPMUSIC import app
from time import time
import asyncio
from VIPMUSIC.utils.extraction import extract_user





@app.on_callback_query(filters.regex("download_video") & ~BANNED_USERS)
@languageCB
async def download_video(client, CallbackQuery, _):
    callback_data = CallbackQuery.data.strip()
    videoid = callback_data.split(None, 1)[1]
    user_id = CallbackQuery.from_user.id
urlissed = videoid
    await message.delete()
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    chutiya = "[" + user_name + "](tg://user?id=" + str(user_id) + ")"

    pablo = await client.send_message(message.chat.id, f"s·¥á·¥Ä Ä·¥Ñ ú…™…¥…¢, ·¥© ü·¥á·¥Äs·¥á ·¥°·¥Ä…™·¥õ...")
    if not urlissed:
        await pablo.edit(
            "üò¥ s·¥è…¥…¢ …¥·¥è·¥õ “ì·¥è·¥ú…¥·¥Ö ·¥è…¥  è·¥è·¥ú·¥õ·¥ú ô·¥á.\n\n¬ª ·¥ç·¥Ä è ô·¥á ·¥õ·¥ú…¥·¥á …¢·¥Ä ü·¥õ…™  ü…™·¥ã ú·¥Ä  ú·¥è, ·¥©·¥Ä·¥Ö ú·¥Ä…™ -  ü…™·¥ã ú·¥Ä…™ ·¥õ·¥è ú ·¥ã·¥Ä Ä·¥õ·¥Ä …¥·¥Ä ú…™ ·¥õ·¥ú !"
        )
        return

    search = SearchVideos(f"https://youtube.com/{urlissed}", offset=1, mode="dict", max_results=1)
    mi = search.result()
    mio = mi["search_result"]
    mo = mio[0]["link"]
    thum = mio[0]["title"]
    fridayz = mio[0]["id"]
    thums = mio[0]["channel"]
    kekme = f"https://img.youtube.com/vi/{fridayz}/hqdefault.jpg"
    await asyncio.sleep(0.6)
    url = mo
    sedlyf = wget.download(kekme)
    opts = {
        "format": "best",
        "addmetadata": True,
        "key": "FFmpegMetadata",
        "prefer_ffmpeg": True,
        "geo_bypass": True,
        "nocheckcertificate": True,
        "postprocessors": [{"key": "FFmpegVideoConvertor", "preferedformat": "mp4"}],
        "outtmpl": "%(id)s.mp4",
        "logtostderr": False,
        "quiet": True,
    }
    try:
        with YoutubeDL(opts) as ytdl:
            infoo = ytdl.extract_info(url, False)
            round(infoo["duration"] / 60)
            ytdl_data = ytdl.extract_info(url, download=True)

    except Exception as e:
        await pablo.edit(f"**“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö.** \n**·¥á Ä Ä·¥è Ä :** `{str(e)}`")
        return
    c_time = time.time()
    file_stark = f"{ytdl_data['id']}.mp4"
    capy = f"‚ùÑ **·¥õ…™·¥õ ü·¥á :** [{thum}]({mo})\nüí´ **·¥Ñ ú·¥Ä…¥…¥·¥á ü :** {thums}\n‚ú® **s·¥á·¥Ä Ä·¥Ñ ú·¥á·¥Ö :** {urlissed}\nü•Ä ** Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö  ô è :** {chutiya}"
    await client.send_video(
        message.chat.id,
        video=open(file_stark, "rb"),
        duration=int(ytdl_data["duration"]),
        file_name=str(ytdl_data["title"]),
        thumb=sedlyf,
        caption=capy,
        supports_streaming=True,
        progress_args=(
            pablo,
            c_time,
            f"¬ª ·¥© ü·¥á·¥Äs·¥á ·¥°·¥Ä…™·¥õ...\n\n·¥ú·¥© ü·¥è·¥Ä·¥Ö…™…¥…¢ `{urlissed}` “ì Ä·¥è·¥ç  è·¥è·¥ú·¥õ·¥ú ô·¥á s·¥á Ä·¥†·¥á Äs...üí´",
            file_stark,
        ),
    )
    await pablo.delete()
    for files in (sedlyf, file_stark):
        if files and os.path.exists(files):
            os.remove(files)
