import asyncio
from pyrogram import Client
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from VIPMUSIC.utils.database import get_served_chats
from VIPMUSIC import app 
import datetime


AM = f"""**‡πè ·¥õ ú…™s …™s ·¥Ä·¥Ö·¥†·¥Ä…¥·¥Ñ·¥á·¥Ö ·¥ç·¥ús…™·¥Ñ ·¥ò ü·¥Ä è·¥á Ä  ô·¥è·¥õ “ì·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥ò+·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥†·¥Ñ.üíå

üéµ 24√ó7 ·¥ú·¥ò·¥õ…™·¥ç·¥á + üéß ·¥†·¥òs  ú·¥ès·¥õ·¥á·¥Ö\nüéô ·¥ò ü·¥Ä è+·¥†·¥ò ü·¥Ä è+·¥Ñ·¥ò ü·¥Ä è+·¥Ñ·¥†·¥ò ü·¥Ä·¥ú s ès·¥õ·¥á·¥ç...**

<b><u>**s·¥ú·¥ò·¥ò·¥è Ä·¥õ·¥á·¥Ö ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á,  ü·¥á“ì·¥õ ·¥ç·¥á·¥ç ô·¥á Ä, ·¥õ·¥Ä…¢·¥Ä ü ü, ·¥†·¥Ñ·¥õ·¥Ä…¢,  ô·¥Ä…¥ - ·¥ç·¥ú·¥õ·¥á, s ú·¥Ä è Ä…™,  ü·¥ú Ä…™·¥Ñs, s·¥è…¥…¢ - ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö, ·¥á·¥õ·¥Ñ...**

·¥úÍú±·¥á [/start](https://t.me/{app.username}?start=help)**

**‚û≤  ô·¥è·¥õ :** @{app.username}"""

ok = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton("‡πè ·¥ã…™·¥Ö…¥·¥Ä·¥ò ·¥ç·¥á ‡πè", url=f"https://t.me/{app.username}?startgroup=s&admin=delete_messages+manage_video_chats+pin_messages+invite_users")
        ]
    ]
)

async def send_message_to_chats():
    try:
        chats = await get_served_chats()

        for chat_info in chats:
            chat_id = chat_info.get('chat_id')
            if isinstance(chat_id, int):  # Check if chat_id is an integer
                try:
                    await app.send_message(chat_id, AM, reply_markup=ok, disable_web_page_preview=True)
                    await asyncio.sleep(1)  # Sleep for 1 second between sending messages
                except Exception as e:
                    pass  # Do nothing if an error occurs while sending message
    except Exception as e:
        pass  # Do nothing if an error occurs while fetching served chats

async def continuous_broadcast():
    while True:
        await send_message_to_chats()
        await asyncio.sleep(300)  # Sleep for 5 minutes (300 seconds)

# Start the continuous broadcast loop
asyncio.create_task(continuous_broadcast())
